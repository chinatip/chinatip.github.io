{"version":3,"sources":["utils/DataProvider.ts","utils/ThemeProvider.ts","components/common/ProfileImage.tsx","utils/BreakpointHelper.tsx","components/common/Contact.tsx","components/sections/aboutme/Profile.tsx","components/sections/aboutme/IntroAndContact.tsx","components/sections/aboutme/AboutMeSection.tsx","components/common/Card.tsx","components/common/CardList.tsx","components/common/TableHelper.tsx","components/common/Table.tsx","components/sections/experiences/ExperienceListHelper.ts","components/sections/SectionName.tsx","components/sections/experiences/ExperiencesSection.tsx","components/sections/projects/ProjectListHelper.ts","components/sections/projects/ProjectsSection.tsx","components/sections/educations/EducationHelper.tsx","components/sections/educations/EducationSection.tsx","components/sections/activities/ActivitySectionHelper.tsx","components/sections/activities/ActivitySection.tsx","components/Container.tsx","App.js","reportWebVitals.js","index.js"],"names":["self","ColorType","borderStyle","css","Container","styled","div","Image","img","ProfileImage","Desktop","children","Hidden","smDown","Mobile","mdUp","Contact","htmlColor","getAboutMeProps","aboutMe","getExperienceProps","experiences","getProjectProps","projects","getEducationProps","educations","getActivityProps","activities","deepBlue","greyBlue","white","defaultTheme","title","subtitle","bodyText","background","sectionName","cardBackground","cardTitle","cardSubtitle","cardCaption","cardContent","tableBackground","tableMenuBackground","tableMenuTitle","tableMenuSubtitle","tableContentText","tableContentBackground","getColor","type","Name","Typography","Position","Profile","props","Grid","container","item","xs","md","direction","justify","alignItems","variant","name","position","Greeting","Content","IntroAndContact","Wrapper","AboutMeSection","spacing","displayName","MaterialUICard","TitleText","SubtitleText","DescriptionText","ContentTextWrapper","ContentText","ContentContainer","Card","description","content","tags","CardContent","map","c","CardWrapper","CardList","list","Object","values","cardProps","i","card","renderCard","formatTableToCardList","rows","e","detail","formatRowToCard","TableContainer","GridContainer","MenuContainer","MenuList","MenuItem","MenuTitle","MenuSubtitle","MenuDescription","Table","React","useState","selectIndex","setIndex","row","onClick","index","renderRow","text","renderContent","getExperienceTableProps","company","duration","mapExperienceToRow","Section","ExperiencesSection","getProjectTableProps","undefined","mapProjectToRow","ProjectsSection","getEducationList","degree","school","mapEducationToCard","EducationSection","getActivityList","mapActivityToCard","ActivitySection","AppContainer","App","data","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b8502ec2.chunk.js","sourcesContent":["import data from '../data.json';\r\nimport { Data, AboutMeSectionProps, ExperienceSectionProps, ProjectSectionProps, ActivitySectionProps, EducationSectionProps } from './../models/Data.d';\r\n\r\nlet self: Data;\r\n\r\nexport const AddData = () => {\r\n    self = data ?? {};\r\n};\r\n\r\nexport const getAboutMeProps = (): AboutMeSectionProps => self.aboutMe;\r\nexport const getExperienceProps = (): ExperienceSectionProps => self.experiences;\r\nexport const getProjectProps = (): ProjectSectionProps => self.projects;\r\nexport const getEducationProps = (): EducationSectionProps => self.educations;\r\nexport const getActivityProps = (): ActivitySectionProps => self.activities;\r\n","const mint: string = '#c7ffd8';\r\nconst deepBlue: string = '#1f3373';\r\nconst blue: string = '#367cff';\r\nconst grey: string = '#f8f9fb';\r\nconst greyBlue: string = '#c0c4d4';\r\nconst fadedBlue: string = '#98ded9';\r\nconst white: string = '#fff';\r\n\r\nexport enum ColorType {\r\n    title = 'title',\r\n    subtitle = 'subtitle',\r\n    bodyText = 'bodyText',\r\n    background = 'background',\r\n    sectionName = 'sectionName',\r\n    cardBackground = 'cardBackground',\r\n    cardTitle = 'cardTitle',\r\n    cardSubtitle = 'cardSubtitle',\r\n    cardCaption = 'cardCaption',\r\n    cardContent = 'cardContent',\r\n    tableBackground = 'tableBackground',\r\n    tableMenuBackground = 'tableMenuBackground',\r\n    tableMenuTitle = 'tableMenuTitle',\r\n    tableMenuSubtitle = 'tableMenuSubtitle',\r\n    tableContentBackground = 'tableContentBackground',\r\n    tableContentText = 'tableContentText',\r\n}\r\n\r\ninterface ThemeProps {\r\n    [ColorType.title]: string;\r\n    [ColorType.subtitle]: string;\r\n    [ColorType.bodyText]: string;\r\n    [ColorType.background]: string;\r\n    [ColorType.sectionName]: string;\r\n    [ColorType.cardBackground]: string;\r\n    [ColorType.cardTitle]: string;\r\n    [ColorType.cardSubtitle]: string;\r\n    [ColorType.cardCaption]: string;\r\n    [ColorType.cardContent]: string;\r\n    [ColorType.tableBackground]: string;\r\n    [ColorType.tableMenuBackground]: string;\r\n    [ColorType.tableMenuTitle]: string;\r\n    [ColorType.tableMenuSubtitle]: string;\r\n    [ColorType.tableContentText]: string;\r\n    [ColorType.tableContentBackground]: string;\r\n}\r\n\r\nconst defaultTheme: ThemeProps = {\r\n    [ColorType.title]: deepBlue,\r\n    [ColorType.subtitle]: deepBlue,\r\n    [ColorType.bodyText]: deepBlue,\r\n    [ColorType.background]: white,\r\n    [ColorType.sectionName]: deepBlue,\r\n    [ColorType.cardBackground]: white,\r\n    [ColorType.cardTitle]: deepBlue,\r\n    [ColorType.cardSubtitle]: deepBlue,\r\n    [ColorType.cardCaption]: greyBlue,\r\n    [ColorType.cardContent]: deepBlue,\r\n    [ColorType.tableBackground]: grey,\r\n    [ColorType.tableMenuBackground]: white,\r\n    [ColorType.tableMenuTitle]: deepBlue,\r\n    [ColorType.tableMenuSubtitle]: greyBlue,\r\n    [ColorType.tableContentText]: deepBlue,\r\n    [ColorType.tableContentBackground]: white,\r\n};\r\n\r\nlet self: ThemeProps = defaultTheme;\r\n\r\nexport const AddTheme = () => {\r\n    self = defaultTheme;\r\n};\r\n\r\nexport const getColor = (type: ColorType): string => self[type];\r\n","import styled, { css } from 'styled-components';\r\n\r\nconst size = 120;\r\nconst borderStyle = css`\r\n    border: 1px solid black;\r\n`;\r\nconst Container = styled.div`\r\n    width: ${size}px;\r\n    height: ${size}px;\r\n    background: grey;\r\n    border-radius: 50%;\r\n    ${borderStyle}\r\n    margin-bottom: 10px;\r\n`;\r\nconst Image = styled.img`\r\n    background: grey;\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 50%;\r\n`;\r\n\r\n\r\nconst ProfileImage = () => {\r\n    return (\r\n        <Container>\r\n            <Image />\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default ProfileImage;","import { Hidden } from \"@material-ui/core\"\r\n\r\nexport const Desktop = ({ children }: any) => (\r\n    <Hidden smDown>\r\n        {children}\r\n    </Hidden>\r\n);\r\n\r\nexport const Mobile = ({ children }: any) => (\r\n    <Hidden mdUp>\r\n        {children}\r\n    </Hidden>\r\n);\r\n","import LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\r\n\r\nconst Contact = () => {\r\n    return (\r\n        <div>\r\n            <LinkedInIcon htmlColor=\"#0a66c2\" />\r\n            <GitHubIcon htmlColor=\"black\" />\r\n            <PictureAsPdfIcon htmlColor=\"black\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Contact;\r\n","import Grid from '@material-ui/core/Grid';\r\nimport { Typography } from '@material-ui/core';\r\nimport ProfileImage from '../../common/ProfileImage';\r\nimport { Mobile } from '../../../utils/BreakpointHelper';\r\nimport Contact from '../../common/Contact';\r\nimport { getAboutMeProps } from '../../../utils/DataProvider';\r\nimport styled from 'styled-components';\r\nimport { ColorType, getColor } from './../../../utils/ThemeProvider';\r\n\r\nconst Name = styled(Typography)`\r\n    color: ${getColor(ColorType.title)};\r\n`;\r\n\r\nconst Position = styled(Typography)`\r\n    color: ${getColor(ColorType.subtitle)};\r\n`;\r\n\r\n\r\nconst Profile = () => {\r\n    const props = getAboutMeProps();\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            item\r\n            xs={12}\r\n            md={4}\r\n            direction=\"column\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n        >\r\n            <ProfileImage />\r\n            <Name variant=\"h4\"> {props.name} </Name>\r\n            <Position variant=\"subtitle1\">{props.position}</Position>\r\n            <Mobile>\r\n                <Contact />\r\n            </Mobile>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Profile;","import { Grid, Typography } from '@material-ui/core';\r\nimport styled from 'styled-components';\r\nimport { Desktop } from '../../../utils/BreakpointHelper';\r\nimport { getAboutMeProps } from '../../../utils/DataProvider';\r\nimport { ColorType, getColor } from '../../../utils/ThemeProvider';\r\nimport Contact from '../../common/Contact';\r\n\r\nconst Greeting = styled(Typography)`\r\n    color: ${getColor(ColorType.subtitle)};\r\n`;\r\n\r\nconst Content = styled(Typography)`\r\n    color: ${getColor(ColorType.bodyText)};\r\n`;\r\n\r\nconst IntroAndContact = () => {\r\n    const props = getAboutMeProps();\r\n\r\n    return (\r\n        <Grid item xs={12} md={8}>\r\n            <Greeting variant=\"h5\">{props.title}</Greeting>\r\n            <Content variant=\"body1\">{props.subtitle}</Content>\r\n            <Desktop>\r\n                <Contact />\r\n            </Desktop>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default IntroAndContact;","import Grid from '@material-ui/core/Grid';\r\nimport Profile from './Profile';\r\nimport IntroAndContact from './IntroAndContact';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled(Grid)`\r\n    padding-top: 60px;\r\n    overflow: auto;\r\n`;\r\n\r\nconst AboutMeSection = () => {\r\n    return (\r\n        <Wrapper\r\n            container\r\n            item\r\n            direction=\"row\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            spacing={3}\r\n        >\r\n            <Profile />\r\n            <IntroAndContact />\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nAboutMeSection.displayName = 'AboutMeSection';\r\nexport default AboutMeSection;","import { Card as MaterialUICard, CardContent, Typography } from '@material-ui/core';\r\nimport styled from 'styled-components';\r\nimport { CardProps } from './../../models/Card.d';\r\nimport { ColorType, getColor } from './../../utils/ThemeProvider';\r\n\r\nconst Container = styled(MaterialUICard)`\r\n    background: ${getColor(ColorType.cardBackground)} !important;\r\n`;\r\n\r\nconst TitleText = styled(Typography)`\r\n    color: ${getColor(ColorType.cardTitle)};\r\n`;\r\n\r\nconst SubtitleText = styled(Typography)`\r\n    color: ${getColor(ColorType.cardSubtitle)};\r\n`;\r\n\r\nconst DescriptionText = styled(Typography)`\r\n    color: ${getColor(ColorType.cardCaption)};\r\n`;\r\n\r\nconst ContentTextWrapper = styled.div`\r\n    margin-bottom: 8px;\r\n\r\n    &:last-child {\r\n        margin: 0;\r\n    }\r\n`;\r\n\r\nconst ContentText = styled(Typography)`\r\n    color: ${getColor(ColorType.cardContent)};\r\n`;\r\n\r\nconst ContentContainer = styled.div`\r\n    margin-top: 8px;\r\n`;\r\n\r\nconst Card = (props: CardProps) => {\r\n    if (!props) return null;\r\n    const { title, subtitle, description, content, tags } = props;\r\n    \r\n    return (\r\n        <Container>\r\n            <CardContent>\r\n                <TitleText variant=\"body1\">{title}</TitleText>\r\n                <SubtitleText variant=\"caption\">{subtitle}</SubtitleText>\r\n                {description && <DescriptionText variant=\"body2\">{description}</DescriptionText>}\r\n                {content && (\r\n                    <ContentContainer>\r\n                        {content.map(c => (\r\n                            <ContentTextWrapper>\r\n                                <ContentText variant=\"body2\">{`- ${c}`}</ContentText>\r\n                            </ContentTextWrapper>\r\n                        ))}\r\n                    </ContentContainer>\r\n                )}\r\n            </CardContent>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Card;","import styled from 'styled-components';\r\nimport { CardProps, CardListProps } from './../../models/Card.d';\r\nimport Card from './Card';\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n`;\r\n\r\nconst CardWrapper = styled.div`\r\n    width: 100%;\r\n    margin-bottom: 8px;\r\n    \r\n    &:last-child {\r\n        margin: 0;\r\n    }\r\n`;\r\n\r\nconst CardList = (props: CardListProps) => {\r\n    if (!props || !props.list) return null;\r\n    \r\n    const renderCard = (i: number, card: CardProps) => (\r\n        <CardWrapper>\r\n            <Card key={i} {...card} />\r\n        </CardWrapper>\r\n    );\r\n\r\n    const list = Object.values(props.list).map((cardProps, i) => renderCard(i, cardProps));\r\n\r\n    return (\r\n        <Container>\r\n            {list}\r\n        </Container>\r\n    )\r\n};\r\n\r\nCardList.displayName = 'CardList';\r\nexport default CardList;\r\n","\r\nimport { Row, TableProps } from '../../models/Table';\r\nimport { CardListProps, CardProps } from './../../models/Card.d';\r\n\r\nconst formatRowToCard = ({ detail, description, title, subtitle }: Row): CardProps => ({\r\n    title,\r\n    subtitle,\r\n    description,\r\n    content: detail,\r\n});\r\n\r\nexport const formatTableToCardList = (props: TableProps): CardListProps => {\r\n    \r\n    return { list: Object.values(props.rows).map((e) => formatRowToCard(e)) };\r\n};\r\n","import { Card, Grid, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { Desktop, Mobile } from '../../utils/BreakpointHelper';\r\nimport { ColorType, getColor } from '../../utils/ThemeProvider';\r\nimport { Row, TableProps } from './../../models/Table.d';\r\nimport CardList from './CardList';\r\nimport { formatTableToCardList } from './TableHelper';\r\nconst borderStyle = css`\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst TableContainer = styled(Card)`\r\n    width: 100%;\r\n    background: ${getColor(ColorType.tableBackground)} !important;\r\n`;\r\n\r\nconst GridContainer = styled(Grid)`\r\n    margin: 0 auto;\r\n    display: flex;\r\n`;\r\n\r\nconst ContentContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    overflow-y: auto;\r\n    width: 100%;\r\n    margin: 8px;\r\n    padding: 16px;\r\n    background: ${getColor(ColorType.tableContentBackground)};\r\n    ${borderStyle}\r\n`;\r\n\r\nconst ContentTextWrapper = styled.div`\r\n    margin-bottom: 8px;\r\n\r\n    &:last-child {\r\n        margin: 0;\r\n    }\r\n`;\r\n\r\nconst ContentText = styled(Typography)`\r\n    color: ${getColor(ColorType.tableContentText)};\r\n`;\r\n\r\nconst MenuContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 250px;\r\n    min-width: 250px;\r\n    padding: 8px;\r\n    overflow-y: auto;\r\n\r\n    .MuiList-root {\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\nconst MenuList = styled(Card)`\r\n    margin-bottom: 8px;\r\n    ${borderStyle}\r\n\r\n    &:last-child {\r\n        margin-bottom: 0;\r\n    }\r\n`;\r\n\r\nconst MenuItem = styled.div`\r\n    padding: 8px 16px;\r\n    cursor: pointer;\r\n    background: ${getColor(ColorType.tableMenuBackground)};\r\n`;\r\nconst MenuTitle = styled(Typography)`\r\n    color: ${getColor(ColorType.tableMenuTitle)};\r\n`;\r\nconst MenuSubtitle = styled(Typography)`\r\n    color: ${getColor(ColorType.tableMenuSubtitle)};\r\n`;\r\nconst MenuDescription = styled(Typography)`\r\n    color: ${getColor(ColorType.tableMenuSubtitle)};\r\n`;\r\n\r\nconst Table = (props: TableProps) => {\r\n    const [selectIndex, setIndex] = React.useState(0);\r\n    \r\n    const handleOnClick = (index: number) => () => {\r\n        setIndex(index);\r\n    };\r\n\r\n    const renderRow = (row: Row, i: number) => (\r\n        <MenuList>\r\n            <MenuItem key={i} onClick={handleOnClick(i)}>\r\n                <MenuTitle variant=\"body1\">{row.title}</MenuTitle>\r\n                <MenuSubtitle variant=\"body2\">{row.subtitle}</MenuSubtitle>\r\n                <MenuDescription variant=\"caption\">{row.description}</MenuDescription>\r\n            </MenuItem>\r\n        </MenuList>\r\n    );\r\n\r\n    const renderContent = () => {\r\n        const content = props.rows[selectIndex].detail;\r\n        if (!content) return null;\r\n\r\n        const renderItem = (text: string) => (\r\n            <ContentTextWrapper>\r\n                <ContentText variant=\"body2\">{`- ${text}`}</ContentText>\r\n            </ContentTextWrapper>\r\n        );\r\n\r\n        return content.map(c => renderItem(c));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Desktop>\r\n                <TableContainer>\r\n                    <GridContainer item xs={12}>\r\n                        <MenuContainer>\r\n                            {Object.values(props.rows).map((e, i) => renderRow(e, i))}\r\n                        </MenuContainer>\r\n                        <ContentContainer>\r\n                            {renderContent()}\r\n                        </ContentContainer>\r\n                    </GridContainer>\r\n                </TableContainer>\r\n            </Desktop>\r\n            <Mobile>\r\n                <CardList {...formatTableToCardList(props)} />\r\n            </Mobile>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Table;","import { ExperienceProps } from \"../../../models/Data\";\r\nimport { getExperienceProps } from \"../../../utils/DataProvider\";\r\nimport { Row, TableProps } from '../../../models/Table';\r\n\r\nconst mapExperienceToRow = (props: ExperienceProps): Row => {\r\n    return {\r\n        title: props.position,\r\n        subtitle: props.company,\r\n        detail: props.detail,\r\n        description: props.duration,\r\n    };\r\n};\r\n\r\nexport const getExperienceTableProps = (): TableProps => {\r\n    const props = getExperienceProps();\r\n    return { rows: Object.values(props.list).map((e) => mapExperienceToRow(e)) };\r\n};\r\n","import { Grid, Typography } from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\nimport { ColorType, getColor } from './../../utils/ThemeProvider';\r\n\r\nconst Wrapper = styled(Grid)`\r\n    padding: 20px 0;\r\n`;\r\n\r\nconst Name = styled(Typography)`\r\n    color: ${getColor(ColorType.sectionName)};\r\n`;\r\n\r\nexport const Section = ({ sectionName, children }: any) => (\r\n    <Wrapper item container>\r\n        <Grid xs={12}>\r\n            <Name variant=\"h5\">{sectionName}</Name>\r\n        </Grid>\r\n        {children}\r\n    </Wrapper>\r\n);","import Table from '../../common/Table';\r\nimport { getExperienceProps } from '../../../utils/DataProvider';\r\nimport { getExperienceTableProps } from './ExperienceListHelper';\r\nimport { Section } from './../SectionName';\r\n\r\nconst ExperiencesSection = () => {\r\n    const props = getExperienceProps();\r\n\r\n    return (\r\n        <Section sectionName={props.sectionName}>\r\n            <Table {...getExperienceTableProps()} />\r\n        </Section>\r\n    );\r\n};\r\n\r\nExperiencesSection.displayName = 'ExperiencesSection';\r\nexport default ExperiencesSection;\r\n","import { Project } from \"../../../models/Data\";\r\nimport { getProjectProps } from \"../../../utils/DataProvider\";\r\nimport { Row } from '../../../models/Table';\r\nimport { TableProps } from '../../../models/Table';\r\n\r\nconst mapProjectToRow = (props: Project): Row => {\r\n    return {\r\n        title: props.name,\r\n        subtitle: props.description,\r\n        detail: props.detail.description ? [props.detail.description] : undefined,\r\n    };\r\n};\r\n\r\nexport const getProjectTableProps = (): TableProps => {\r\n    const props = getProjectProps();\r\n    return { rows: Object.values(props.list).map((e) => mapProjectToRow(e)) };\r\n};\r\n","import Table from '../../common/Table';\r\nimport { getProjectProps } from '../../../utils/DataProvider';\r\nimport { getProjectTableProps } from './ProjectListHelper';\r\nimport { Section } from './../SectionName';\r\n\r\nconst ProjectsSection = () => {\r\n    const props = getProjectProps();\r\n\r\n    return (\r\n        <Section sectionName={props.sectionName}>\r\n            <Table {...getProjectTableProps()} />\r\n        </Section>\r\n    );\r\n};\r\nProjectsSection.displayName = 'ProjectsSection';\r\nexport default ProjectsSection;\r\n","import { getEducationProps } from \"../../../utils/DataProvider\";\r\nimport { Education } from '../../../models/Data';\r\nimport { CardListProps, CardProps } from '../../../models/Card';\r\n\r\nconst mapEducationToCard = (props: Education): CardProps => {\r\n    return {\r\n        title: props.degree,\r\n        subtitle: props.school,\r\n        description: props.duration,\r\n    };\r\n};\r\n\r\nexport const getEducationList = (): CardListProps => {\r\n    const props = getEducationProps();\r\n\r\n    return { list: Object.values(props.list).map((e) => mapEducationToCard(e)) };\r\n}","import { getEducationList } from './EducationHelper';\r\nimport { Section } from './../SectionName';\r\nimport { getEducationProps } from '../../../utils/DataProvider';\r\nimport CardList from './../../common/CardList';\r\n\r\nconst EducationSection = () => {\r\n    const props = getEducationProps();\r\n    \r\n    return (\r\n        <Section sectionName={props.sectionName}>\r\n            <CardList {...getEducationList()} />\r\n        </Section>\r\n    );\r\n};\r\n\r\nEducationSection.displayName = 'EducationSection';\r\nexport default EducationSection;","import { getActivityProps } from \"../../../utils/DataProvider\";\r\nimport { Activity } from '../../../models/Data';\r\nimport { CardListProps, CardProps } from '../../../models/Card';\r\n\r\nconst mapActivityToCard = (props: Activity): CardProps => {\r\n    return {\r\n        title: props.name,\r\n        subtitle: props.duration,\r\n        content: props.description ? [props.description] : undefined,\r\n    };\r\n};\r\n\r\nexport const getActivityList = (): CardListProps => {\r\n    const props = getActivityProps();\r\n\r\n    return { list: Object.values(props.list).map((e) => mapActivityToCard(e)) };\r\n}","import { getActivityList } from './ActivitySectionHelper';\r\nimport { getActivityProps } from '../../../utils/DataProvider';\r\nimport { Section } from './../SectionName';\r\nimport CardList from './../../common/CardList';\r\n\r\nconst ActivitySection = () => {\r\n    const props = getActivityProps();\r\n    \r\n    return (\r\n        <Section sectionName={props.sectionName}>\r\n            <CardList {...getActivityList()} />\r\n        </Section>\r\n    )\r\n};\r\n\r\nActivitySection.displayName = 'ActivitySection';\r\nexport default ActivitySection;","import styled from 'styled-components';\r\nimport AboutMeSection from './sections/aboutme/AboutMeSection';\r\nimport ExperiencesSection from './sections/experiences/ExperiencesSection';\r\nimport ProjectsSection from './sections/projects/ProjectsSection';\r\nimport EducationSection from './sections/educations/EducationSection';\r\nimport ActivitySection from './sections/activities/ActivitySection';\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    max-width: 800px;\r\n    margin: 0 auto;\r\n    padding: 16px;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst Container = () => {\r\n    return (\r\n        <Wrapper>\r\n            <AboutMeSection />\r\n            <ExperiencesSection />\r\n            <ProjectsSection />\r\n            <EducationSection />\r\n            <ActivitySection />\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default Container;","import styled from \"styled-components\";\nimport Container from \"./components/Container\";\nimport { AddData } from './utils/DataProvider';\nimport { ColorType, getColor } from \"./utils/ThemeProvider\";\n\nconst AppContainer = styled.div`\n\tbackground: ${getColor(ColorType.background)};\n`;\n\nfunction App() {\n\tAddData();\n\n\treturn (\n\t\t<AppContainer className=\"App\">\n\t\t\t<Container />\n\t\t</AppContainer>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["utils/Constant.ts","utils/ThemeProvider.ts","utils/DataProvider.ts","components/common/Contact.tsx","components/sections/aboutme/AboutMeSection.tsx","components/sections/experiences/ExperienceListHelper.ts","components/sections/SectionName.tsx","utils/BreakpointHelper.tsx","components/common/Card.tsx","components/common/CardList.tsx","components/common/TableHelper.tsx","components/common/Table.tsx","components/sections/experiences/ExperiencesSection.tsx","components/sections/projects/ProjectListHelper.ts","components/sections/projects/ProjectsSection.tsx","components/sections/educations/EducationHelper.tsx","components/sections/educations/EducationSection.tsx","components/sections/activities/ActivitySectionHelper.tsx","components/sections/activities/ActivitySection.tsx","components/Container.tsx","components/Background.tsx","components/GlobalStyle.ts","App.js","reportWebVitals.js","index.js"],"names":["ColorType","Sizing","self","white","white5p","white20p","white65p","purple","frenchViolet","gradientBackground","gradientBackground2","defaultTheme","name","position","bodyText","icon","background","wrapperBorder","sectionName","cardBackground","cardTitle","cardSubtitle","cardCaption","cardContent","tableBackground","tableMenuBackground","tableMenuTitle","tableMenuSubtitle","tableMenuDescription","tableMenuBorder","tableContentText","tableContentBackground","getColor","type","getExperienceProps","experiences","getProjectProps","projects","getEducationProps","educations","getActivityProps","activities","Container","styled","div","S","handleOnClick","link","window","open","Contact","props","contacts","fontSize","onClick","linkedin","gitHub","Typography","variant","medium","Wrapper","NameWrapper","Position","AboutMeSection","aboutMe","displayName","getExperienceTableProps","rows","Object","values","list","map","e","title","subtitle","company","detail","description","duration","mapExperienceToRow","Grid","L","Name","Section","children","item","container","xs","Desktop","Hidden","smDown","Mobile","mdUp","MaterialUICard","TitleText","SubtitleText","DescriptionText","ContentTextWrapper","ContentText","ContentContainer","Card","content","links","tags","CardContent","renderIcon","c","horizontalContainerStyle","css","horizontalCardStyle","alignment","CardWrapper","CardList","cardProps","i","card","renderCard","formatTableToCardList","formatRowToCard","borderStyle","XS","TableContainer","GridContainer","MenuContainer","MenuList","MenuItem","XXS","MenuTitle","MenuSubtitle","MenuDescription","Table","React","useState","selectIndex","setIndex","row","className","index","renderRow","text","renderContent","ExperiencesSection","getProjectCardListProps","mapProjectToCard","ProjectsSection","getEducationList","degree","school","mapEducationToCard","EducationSection","getActivityList","mapActivityToCard","ActivitySection","wrapperStyle","DesktopContainer","DesktopWrapper","MobileContainer","library","add","faMedium","sections","circleStyle","GlobalStyle","createGlobalStyle","AppContainer","App","data","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e5829adc.chunk.js","sourcesContent":["export enum ColorType {\r\n    name = 'name',\r\n    position = 'position',\r\n    bodyText = 'bodyText',\r\n    icon = 'icon',\r\n    background = 'background',\r\n    wrapperBorder = 'wrapperBorder',\r\n    sectionName = 'sectionName',\r\n    cardBackground = 'cardBackground',\r\n    cardTitle = 'cardTitle',\r\n    cardSubtitle = 'cardSubtitle',\r\n    cardCaption = 'cardCaption',\r\n    cardContent = 'cardContent',\r\n    tableBackground = 'tableBackground',\r\n    tableMenuBackground = 'tableMenuBackground',\r\n    tableMenuTitle = 'tableMenuTitle',\r\n    tableMenuSubtitle = 'tableMenuSubtitle',\r\n    tableMenuDescription = 'tableMenuDescription',\r\n    tableMenuBorder = 'tableMenuBorder',\r\n    tableContentBackground = 'tableContentBackground',\r\n    tableContentText = 'tableContentText',\r\n};\r\n\r\nexport enum Sizing {\r\n    XXS = '2px',\r\n    XS = '4px',\r\n    S = '8px',\r\n    M = '12px',\r\n    L = '16px',\r\n    XL = '32px',\r\n    XXL = '48px',\r\n};\r\n\r\n","import { ColorType } from './Constant';\r\n\r\nconst white: string = '#fff';\r\nconst white5p: string = 'rgb(255 255 255 / 5%)';\r\nconst white20p: string = 'rgb(255 255 255 / 20%)';\r\nconst white65p: string = 'rgb(255 255 255 / 65%)';\r\nconst white85p: string = 'rgb(255 255 255 / 85%)';\r\nconst grey20p: string = 'rgb(188 188 188 / 20%)';\r\n\r\n//https://coolors.co/7400b8-6930c3-5e60ce-5390d9-4ea8de-48bfe3-56cfe1-64dfdf-72efdd-80ffdb\r\nconst purple: string = '#7400b8';\r\nconst frenchViolet: string = '#6930c3';\r\nconst slateBlue: string = '#5e60ce';\r\nconst tuftsBlue: string = '#5390d9';\r\nconst blueJeans: string = '#4ea8de';\r\nconst vividSkyBlue: string = '#48bfe3';\r\nconst skyBlueCrayola: string = '#56cfe1';\r\nconst mediumTurquoise: string = '#64dfdf';\r\nconst turquoise: string = '#72efdd';\r\nconst aquamarine: string = '#80ffdb';\r\nconst aquamarine30p:string = 'rgb(128 255 219 / 30%)';\r\n\r\ninterface ThemeProps {\r\n    [ColorType.name]: string;\r\n    [ColorType.position]: string;\r\n    [ColorType.bodyText]: string;\r\n    [ColorType.icon]: string;\r\n    [ColorType.background]: string;\r\n    [ColorType.wrapperBorder]: string;\r\n    [ColorType.sectionName]: string;\r\n    [ColorType.cardBackground]: string;\r\n    [ColorType.cardTitle]: string;\r\n    [ColorType.cardSubtitle]: string;\r\n    [ColorType.cardCaption]: string;\r\n    [ColorType.cardContent]: string;\r\n    [ColorType.tableBackground]: string;\r\n    [ColorType.tableMenuBackground]: string;\r\n    [ColorType.tableMenuTitle]: string;\r\n    [ColorType.tableMenuSubtitle]: string;\r\n    [ColorType.tableMenuDescription]: string;\r\n    [ColorType.tableMenuBorder]: string;\r\n    [ColorType.tableContentText]: string;\r\n    [ColorType.tableContentBackground]: string;\r\n}\r\n\r\nconst gradientBackground = `linear-gradient(190deg, ${white20p}, ${white5p})`;\r\nconst gradientBackground2 = `linear-gradient(190deg, ${white20p} 10%, ${white5p} 30%)`;\r\nconst defaultTheme: ThemeProps = {\r\n    [ColorType.name]: white,\r\n    [ColorType.position]: purple,\r\n    [ColorType.bodyText]: purple,\r\n    [ColorType.icon]: white,\r\n    [ColorType.background]: `linear-gradient(45deg, ${purple}, ${frenchViolet}, ${slateBlue}, ${tuftsBlue}, ${blueJeans}, ${vividSkyBlue}, ${skyBlueCrayola}, ${mediumTurquoise}, ${turquoise}, ${aquamarine}) fixed`,\r\n    [ColorType.wrapperBorder]: white65p,\r\n    [ColorType.sectionName]: white85p,\r\n    [ColorType.cardBackground]: gradientBackground,\r\n    [ColorType.cardTitle]: white,\r\n    [ColorType.cardSubtitle]: white65p,\r\n    [ColorType.cardCaption]: white65p,\r\n    [ColorType.cardContent]: white,\r\n    [ColorType.tableBackground]: gradientBackground,\r\n    [ColorType.tableMenuBackground]: gradientBackground,\r\n    [ColorType.tableMenuTitle]: white,\r\n    [ColorType.tableMenuSubtitle]: frenchViolet,\r\n    [ColorType.tableMenuDescription]: white65p,\r\n    [ColorType.tableMenuBorder]: aquamarine30p,\r\n    [ColorType.tableContentText]: white,\r\n    [ColorType.tableContentBackground]: gradientBackground2,\r\n};\r\n\r\nlet self: ThemeProps = defaultTheme;\r\n\r\nexport const AddTheme = () => {\r\n    self = defaultTheme;\r\n};\r\n\r\nexport const getColor = (type: ColorType): string => self[type];\r\n","import data from '../data.json';\r\nimport { Data, AboutMeSectionProps, ExperienceSectionProps, ProjectSectionProps, ActivitySectionProps, EducationSectionProps, ContactProps } from './../models/Data.d';\r\n\r\nlet self: Data;\r\n\r\nexport const AddData = () => {\r\n    self = data ?? {};\r\n};\r\n\r\nexport const getAboutMeProps = (): AboutMeSectionProps => self.aboutMe;\r\nexport const getExperienceProps = (): ExperienceSectionProps => self.experiences;\r\nexport const getProjectProps = (): ProjectSectionProps => self.projects;\r\nexport const getEducationProps = (): EducationSectionProps => self.educations;\r\nexport const getActivityProps = (): ActivitySectionProps => self.activities;\r\nexport const getContactProps = (): ContactProps => self.contacts;\r\n","import LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport styled from 'styled-components';\r\nimport { getColor } from '../../utils/ThemeProvider';\r\nimport { ColorType, Sizing } from '../../utils/Constant';\r\nimport { getContactProps } from './../../utils/DataProvider';\r\nimport { Icon } from '@material-ui/core';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-top: ${Sizing.S};\r\n    \r\n    .MuiSvgIcon-root, .MuiTypography-root{\r\n        cursor: pointer;\r\n        margin-right: ${Sizing.S};\r\n        color: ${getColor(ColorType.icon)};\r\n\r\n        &:last-child {\r\n            margin: 0;\r\n        }\r\n    }\r\n`;\r\nconst handleOnClick = (link: string) => () => window.open(link, \"_blank\");\r\n\r\nconst Contact = () => {\r\n    const props = getContactProps();\r\n\r\n    return (\r\n        <Container>\r\n            <LinkedInIcon fontSize=\"large\" onClick={handleOnClick(props.linkedin)} />\r\n            <GitHubIcon fontSize=\"large\" onClick={handleOnClick(props.gitHub)} />\r\n            <Typography variant=\"h4\">\r\n                <FontAwesomeIcon icon={[\"fab\", \"medium\"]} onClick={handleOnClick(props.medium)}/>\r\n            </Typography>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Contact;\r\n","import styled from 'styled-components';\r\nimport { Typography } from '@material-ui/core';\r\nimport { getColor } from '../../../utils/ThemeProvider';\r\nimport { getAboutMeProps } from '../../../utils/DataProvider';\r\nimport Contact from './../../common/Contact';\r\nimport { ColorType } from '../../../utils/Constant';\r\n\r\nconst Wrapper = styled.div`\r\n    margin: 40px 0 20px;\r\n    text-align: center;\r\n`;\r\n\r\nconst NameWrapper = styled.div`\r\n    color: ${getColor(ColorType.name)};\r\n    margin-top: 8px;\r\n`;\r\n\r\nconst Position = styled(Typography)`\r\n    color: ${getColor(ColorType.position)};\r\n`;\r\n\r\n\r\nconst AboutMeSection = () => {\r\n    const props = getAboutMeProps();\r\n\r\n    return (\r\n        <Wrapper>\r\n            <NameWrapper>\r\n                <Typography variant=\"h2\"> {props.name} </Typography>\r\n            </NameWrapper>\r\n            <Position variant=\"h5\">{props.position}</Position>\r\n            <Contact />\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nAboutMeSection.displayName = 'AboutMeSection';\r\nexport default AboutMeSection;","import { ExperienceProps } from \"../../../models/Data\";\r\nimport { getExperienceProps } from \"../../../utils/DataProvider\";\r\nimport { Row, TableProps } from '../../../models/Table';\r\nimport { CardListProps, CardProps } from './../../../models/Card.d';\r\n\r\nconst mapExperienceToRow = (props: ExperienceProps): Row => {\r\n    return {\r\n        title: props.position,\r\n        subtitle: props.company,\r\n        detail: props.detail,\r\n        description: props.duration,\r\n    };\r\n};\r\n\r\nexport const getExperienceTableProps = (): TableProps => {\r\n    const props = getExperienceProps();\r\n    return { rows: Object.values(props.list).map((e) => mapExperienceToRow(e)) };\r\n};\r\n\r\nconst mapExperienceToCard = (props: ExperienceProps): CardProps => {\r\n    return {\r\n        title: props.position,\r\n        subtitle: props.company,\r\n        description: props.duration,\r\n        content: props.detail,\r\n    };\r\n};\r\n\r\nexport const getExperienceCardListProps = (): CardListProps => {\r\n    const props = getExperienceProps();\r\n    return { list: Object.values(props.list).map((e) => mapExperienceToCard(e)) };\r\n};\r\n","import { Grid, Typography } from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\nimport { ColorType, Sizing } from \"../../utils/Constant\";\r\nimport { getColor } from './../../utils/ThemeProvider';\r\n\r\nconst Wrapper = styled(Grid)`\r\n    padding: ${Sizing.L} 0;\r\n`;\r\n\r\nconst Name = styled(Typography)`\r\n    color: ${getColor(ColorType.sectionName)};\r\n`;\r\n\r\nexport const Section = ({ sectionName, children }: any) => (\r\n    <Wrapper item container>\r\n        <Grid xs={12}>\r\n            <Name variant=\"h4\">{sectionName}</Name>\r\n        </Grid>\r\n        {children}\r\n    </Wrapper>\r\n);","import { Hidden } from \"@material-ui/core\"\r\n\r\nexport const Desktop = ({ children }: any) => (\r\n    <Hidden smDown>\r\n        {children}\r\n    </Hidden>\r\n);\r\n\r\nexport const Mobile = ({ children }: any) => (\r\n    <Hidden mdUp>\r\n        {children}\r\n    </Hidden>\r\n);\r\n","import { Card as MaterialUICard, CardContent, Typography } from '@material-ui/core';\r\nimport styled from 'styled-components';\r\nimport { ColorType, Sizing } from '../../utils/Constant';\r\nimport { CardProps } from './../../models/Card.d';\r\nimport { getColor } from './../../utils/ThemeProvider';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\n\r\nconst Container = styled(MaterialUICard)`\r\n    background: ${getColor(ColorType.cardBackground)} !important;\r\n    height: 100%;\r\n`;\r\n\r\nconst TitleText = styled(Typography)`\r\n    color: ${getColor(ColorType.cardTitle)};\r\n\r\n    .MuiSvgIcon-root {\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst SubtitleText = styled(Typography)`\r\n    color: ${getColor(ColorType.cardSubtitle)};\r\n`;\r\n\r\nconst DescriptionText = styled(Typography)`\r\n    color: ${getColor(ColorType.cardCaption)};\r\n`;\r\n\r\nconst ContentTextWrapper = styled.div`\r\n    margin-bottom: ${Sizing.S};\r\n\r\n    &:last-child {\r\n        margin: 0;\r\n    }\r\n`;\r\n\r\nconst ContentText = styled(Typography)`\r\n    color: ${getColor(ColorType.cardContent)};\r\n`;\r\n\r\nconst ContentContainer = styled.div`\r\n    margin-top: ${Sizing.S};\r\n`;\r\n\r\nconst Card = (props: CardProps) => {\r\n    if (!props) return null;\r\n    const { title, subtitle, description, content, links, tags } = props;\r\n\r\n    const renderIcon = () => {\r\n        const link = links && links[0] ? links[0] : null;\r\n        if (!link) return null;\r\n        return <LinkIcon fontSize=\"inherit\" onClick={() => window.open(link, \"_blank\")}/>;\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <CardContent>\r\n                <TitleText variant=\"h5\">\r\n                    {title}\r\n                    {renderIcon()}\r\n                </TitleText>\r\n                <SubtitleText variant=\"body2\">{subtitle}</SubtitleText>\r\n                {description && <DescriptionText variant=\"caption\">{description}</DescriptionText>}\r\n                {content && (\r\n                    <ContentContainer>\r\n                        {content.map(c => (\r\n                            <ContentTextWrapper>\r\n                                <ContentText variant=\"body2\">{`- ${c}`}</ContentText>\r\n                            </ContentTextWrapper>\r\n                        ))}\r\n                    </ContentContainer>\r\n                )}\r\n            </CardContent>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Card;","import styled, { css } from 'styled-components';\r\nimport { Sizing } from '../../utils/Constant';\r\nimport { CardProps, CardListProps } from './../../models/Card.d';\r\nimport Card from './Card';\r\n\r\nconst horizontalContainerStyle = css`\r\n    display: flex;\r\n    overflow-x: auto;\r\n\r\n    &::-webkit-scrollbar {\r\n        display: none;\r\n    }\r\n`;\r\n\r\nconst horizontalCardStyle = css`\r\n    min-width: 200px;\r\n    width: 270px;\r\n    margin: 0 ${Sizing.S} ${Sizing.S} 0;\r\n\r\n    &:last-child {\r\n        margin: 0 ${Sizing.S} ${Sizing.S} 0;\r\n    }\r\n`;\r\n\r\nconst Container = styled.div<CardListProps>`\r\n    width: 100%;\r\n    ${props => props.alignment == 'horizontal' ? horizontalContainerStyle : '' }\r\n`;\r\n\r\nconst CardWrapper = styled.div<CardListProps>`\r\n    margin-bottom: ${Sizing.S};\r\n    &:last-child {\r\n        margin: 0;\r\n    }\r\n    \r\n    ${props => props.alignment == 'horizontal' ? horizontalCardStyle : '' }\r\n    \r\n`;\r\n\r\nconst CardList = (props: CardListProps) => {\r\n    if (!props || !props.list) return null;\r\n    \r\n    const renderCard = (i: number, card: CardProps) => (\r\n        <CardWrapper {...props}>\r\n            <Card key={i} {...card} />\r\n        </CardWrapper>\r\n    );\r\n\r\n    const list = Object.values(props.list).map((cardProps, i) => renderCard(i, cardProps));\r\n\r\n    return (\r\n        <Container {...props}>\r\n            {list}\r\n        </Container>\r\n    )\r\n};\r\n\r\nCardList.displayName = 'CardList';\r\nexport default CardList;\r\n","\r\nimport { Row, TableProps } from '../../models/Table';\r\nimport { CardListProps, CardProps } from './../../models/Card.d';\r\n\r\nconst formatRowToCard = ({ detail, description, title, links, subtitle }: Row): CardProps => ({\r\n    title,\r\n    subtitle,\r\n    description,\r\n    links,\r\n    content: detail,\r\n});\r\n\r\nexport const formatTableToCardList = (props: TableProps): CardListProps => {\r\n    \r\n    return { list: Object.values(props.rows).map((e) => formatRowToCard(e)) };\r\n};\r\n","import { Card, CardProps, Grid, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { Desktop, Mobile } from '../../utils/BreakpointHelper';\r\nimport { ColorType, Sizing } from '../../utils/Constant';\r\nimport { getColor } from '../../utils/ThemeProvider';\r\nimport { Row, TableProps } from './../../models/Table.d';\r\nimport CardList from './CardList';\r\nimport { formatTableToCardList } from './TableHelper';\r\n\r\nconst borderStyle = css`\r\n    border-radius: ${Sizing.XS};\r\n`;\r\n\r\nconst TableContainer = styled(Card)`\r\n    width: 100%;\r\n    min-height: 300px;\r\n    background: ${getColor(ColorType.tableBackground)} !important;\r\n`;\r\n\r\nconst GridContainer = styled(Grid)`\r\n    margin: 0 auto;\r\n    display: flex;\r\n    height: 100%;\r\n`;\r\n\r\nconst ContentContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    overflow-y: auto;\r\n    width: 100%;\r\n    margin: ${Sizing.S};\r\n    padding: ${Sizing.L};\r\n    background: ${getColor(ColorType.tableContentBackground)};\r\n    ${borderStyle}\r\n`;\r\n\r\nconst ContentTextWrapper = styled.div`\r\n    margin-bottom: ${Sizing.S};\r\n\r\n    .MuiPaper-root {\r\n        background: transparent !important;\r\n    }\r\n\r\n    &:last-child {\r\n        margin: 0;\r\n    }\r\n`;\r\n\r\nconst ContentText = styled(Typography)`\r\n    color: ${getColor(ColorType.tableContentText)};\r\n`;\r\n\r\nconst MenuContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 250px;\r\n    min-width: 250px;\r\n    padding: ${Sizing.S};\r\n    overflow-y: auto;\r\n\r\n    .MuiList-root {\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\nconst MenuList = styled.div`\r\n    margin-bottom: ${Sizing.S};\r\n    ${borderStyle};\r\n\r\n    &:last-child {\r\n        margin-bottom: 0;\r\n    }\r\n`;\r\n\r\nconst MenuItem = styled(Card)`\r\n    padding: ${Sizing.S};\r\n    cursor: pointer;\r\n    border-box: box-sizing;\r\n    background: ${getColor(ColorType.tableMenuBackground)} !important;\r\n    border: ${Sizing.XXS} solid transparent;\r\n\r\n    &.selected {\r\n        border-color: ${getColor(ColorType.tableMenuBorder)};\r\n    }\r\n`;\r\nconst MenuTitle = styled(Typography)`\r\n    color: ${getColor(ColorType.tableMenuTitle)};\r\n`;\r\nconst MenuSubtitle = styled(Typography)`\r\n    color: ${getColor(ColorType.tableMenuSubtitle)};\r\n`;\r\nconst MenuDescription = styled(Typography)`\r\n    color: ${getColor(ColorType.tableMenuDescription)};\r\n`;\r\n\r\nconst Table = (props: TableProps) => {\r\n    const [selectIndex, setIndex] = React.useState(0);\r\n    \r\n    const handleOnClick = (index: number) => () => {\r\n        setIndex(index);\r\n    };\r\n\r\n    const renderRow = (row: Row, i: number) => (\r\n        <MenuList>\r\n            <MenuItem key={i} className={selectIndex === i ? 'selected' : ''} onClick={handleOnClick(i)}>\r\n                <MenuTitle variant=\"body1\">{row.title}</MenuTitle>\r\n                <MenuSubtitle variant=\"body2\">{row.subtitle}</MenuSubtitle>\r\n                <MenuDescription variant=\"caption\">{row.description}</MenuDescription>\r\n            </MenuItem>\r\n        </MenuList>\r\n    );\r\n\r\n    const renderContent = () => {\r\n        const content = props.rows[selectIndex].detail;\r\n        if (!content) return null;\r\n\r\n        const renderItem = (text: string) => (\r\n            <ContentTextWrapper>\r\n                <ContentText variant=\"body2\">{`- ${text}`}</ContentText>\r\n            </ContentTextWrapper>\r\n        );\r\n\r\n        return content.map(c => renderItem(c));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Desktop>\r\n                <TableContainer>\r\n                    <GridContainer item xs={12}>\r\n                        <MenuContainer>\r\n                            {Object.values(props.rows).map((e, i) => renderRow(e, i))}\r\n                        </MenuContainer>\r\n                        <ContentContainer>\r\n                            {renderContent()}\r\n                        </ContentContainer>\r\n                    </GridContainer>\r\n                </TableContainer>\r\n            </Desktop>\r\n            <Mobile>\r\n                <CardList {...formatTableToCardList(props)} />\r\n            </Mobile>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Table;","import { getExperienceProps } from '../../../utils/DataProvider';\r\nimport { getExperienceTableProps } from './ExperienceListHelper';\r\nimport { Section } from './../SectionName';\r\nimport Table from './../../common/Table';\r\n\r\nconst ExperiencesSection = () => {\r\n    const props = getExperienceProps();\r\n\r\n    return (\r\n        <Section sectionName={props.sectionName}>\r\n            <Table {...getExperienceTableProps()} />\r\n        </Section>\r\n    );\r\n};\r\n\r\nExperiencesSection.displayName = 'ExperiencesSection';\r\nexport default ExperiencesSection;\r\n","import { Project } from \"../../../models/Data\";\r\nimport { getProjectProps } from \"../../../utils/DataProvider\";\r\nimport { Row } from '../../../models/Table';\r\nimport { TableProps } from '../../../models/Table';\r\nimport { CardListProps, CardProps } from \"../../../models/Card\";\r\n\r\nconst mapProjectToRow = (props: Project): Row => {\r\n    return {\r\n        title: props.name,\r\n        subtitle: props.description,\r\n        detail: props.detail.description ? [props.detail.description] : undefined,\r\n        links: props.detail.links,\r\n    };\r\n};\r\n\r\nexport const getProjectTableProps = (): TableProps => {\r\n    const props = getProjectProps();\r\n    return { rows: Object.values(props.list).map((e) => mapProjectToRow(e)) };\r\n};\r\n\r\nconst mapProjectToCard = (props: Project): CardProps => {\r\n    return {\r\n        title: props.name,\r\n        description: props.description,\r\n        links: props.detail.links,\r\n    };\r\n};\r\n\r\nexport const getProjectCardListProps = (): CardListProps => {\r\n    const props = getProjectProps();\r\n    return {\r\n        list: Object.values(props.list).map((e) => mapProjectToCard(e)),\r\n        alignment: 'horizontal',\r\n    };\r\n};\r\n\r\n","import { getProjectProps } from '../../../utils/DataProvider';\r\nimport { getProjectCardListProps } from './ProjectListHelper';\r\nimport { Section } from './../SectionName';\r\nimport CardList from './../../common/CardList';\r\n\r\nconst ProjectsSection = () => {\r\n    const props = getProjectProps();\r\n\r\n    return (\r\n        <Section sectionName={props.sectionName}>\r\n            <CardList {...getProjectCardListProps()} />\r\n        </Section>\r\n    );\r\n};\r\nProjectsSection.displayName = 'ProjectsSection';\r\nexport default ProjectsSection;\r\n","import { getEducationProps } from \"../../../utils/DataProvider\";\r\nimport { Education } from '../../../models/Data';\r\nimport { CardListProps, CardProps } from '../../../models/Card';\r\n\r\nconst mapEducationToCard = (props: Education): CardProps => {\r\n    return {\r\n        title: props.degree,\r\n        subtitle: props.school,\r\n        description: props.duration,\r\n    };\r\n};\r\n\r\nexport const getEducationList = (): CardListProps => {\r\n    const props = getEducationProps();\r\n\r\n    return { list: Object.values(props.list).map((e) => mapEducationToCard(e)) };\r\n}","import { getEducationList } from './EducationHelper';\r\nimport { Section } from './../SectionName';\r\nimport { getEducationProps } from '../../../utils/DataProvider';\r\nimport CardList from './../../common/CardList';\r\n\r\nconst EducationSection = () => {\r\n    const props = getEducationProps();\r\n    \r\n    return (\r\n        <Section sectionName={props.sectionName}>\r\n            <CardList {...getEducationList()} />\r\n        </Section>\r\n    );\r\n};\r\n\r\nEducationSection.displayName = 'EducationSection';\r\nexport default EducationSection;","import { getActivityProps } from \"../../../utils/DataProvider\";\r\nimport { Activity } from '../../../models/Data';\r\nimport { CardListProps, CardProps } from '../../../models/Card';\r\n\r\nconst mapActivityToCard = (props: Activity): CardProps => {\r\n    return {\r\n        title: props.name,\r\n        subtitle: props.duration,\r\n        description: props.description,\r\n    };\r\n};\r\n\r\nexport const getActivityList = (): CardListProps => {\r\n    const props = getActivityProps();\r\n\r\n    return { list: Object.values(props.list).map((e) => mapActivityToCard(e)) };\r\n}","import { getActivityList } from './ActivitySectionHelper';\r\nimport { getActivityProps } from '../../../utils/DataProvider';\r\nimport { Section } from './../SectionName';\r\nimport CardList from './../../common/CardList';\r\n\r\nconst ActivitySection = () => {\r\n    const props = getActivityProps();\r\n    \r\n    return (\r\n        <Section sectionName={props.sectionName}>\r\n            <CardList {...getActivityList()} />\r\n        </Section>\r\n    )\r\n};\r\n\r\nActivitySection.displayName = 'ActivitySection';\r\nexport default ActivitySection;","import styled, { css } from 'styled-components';\r\nimport AboutMeSection from './sections/aboutme/AboutMeSection';\r\nimport ExperiencesSection from './sections/experiences/ExperiencesSection';\r\nimport ProjectsSection from './sections/projects/ProjectsSection';\r\nimport EducationSection from './sections/educations/EducationSection';\r\nimport ActivitySection from './sections/activities/ActivitySection';\r\nimport { getColor } from '../utils/ThemeProvider';\r\nimport { ColorType } from '../utils/Constant';\r\nimport { Desktop, Mobile } from './../utils/BreakpointHelper';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faMedium } from '@fortawesome/free-brands-svg-icons';\r\n\r\nconst gradientBorder = css`\r\n    border: 2px solid transparent;\r\n    border-radius: 4px;\r\n    background: ${getColor(ColorType.wrapperBorder)} border-box;\r\n    -webkit-mask: linear-gradient(#fff 0 0) padding-box, linear-gradient(#fff 0 0);\r\n    -webkit-mask-composite: destination-out;\r\n    mask-composite: exclude;\r\n`;\r\n\r\nconst wrapperStyle = css`\r\n    z-index: 1;\r\n    position: relative;\r\n    max-width: 800px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    padding: 16px;\r\n`;\r\nconst DesktopContainer = styled.div`\r\n    z-index: 1;\r\n    position: relative;\r\n    max-width: 800px;\r\n    margin: 0 auto;\r\n    padding: 40px 0;\r\n`;\r\nconst DesktopWrapper = styled.div`\r\n    ${wrapperStyle}\r\n    border: 4px solid ${getColor(ColorType.wrapperBorder)};\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst MobileContainer = styled.div`\r\n    ${wrapperStyle}\r\n`;\r\n\r\nconst Container = () => {\r\n    library.add(\r\n        faMedium,\r\n    );\r\n    const sections = (\r\n        <>\r\n            <AboutMeSection />\r\n            <ExperiencesSection />\r\n            <ProjectsSection />\r\n            <EducationSection />\r\n            <ActivitySection />\r\n        </>\r\n    );\r\n    \r\n    return (\r\n        <>\r\n            <Desktop>\r\n                <DesktopContainer>\r\n                    <DesktopWrapper>\r\n                        {sections}\r\n                    </DesktopWrapper>\r\n                </DesktopContainer>\r\n            </Desktop>\r\n            <Mobile>\r\n                <MobileContainer>\r\n                    {sections}\r\n                </MobileContainer>\r\n            </Mobile>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Container;","import styled, { css } from \"styled-components\";\r\n\r\n\r\nconst circleStyle = css`\r\n    z-index: 0;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    border-radius: 50%;\r\n`\r\n\r\nconst Circle = styled.div`\r\n    ${circleStyle}\r\n    width: 50px;\r\n    height: 50px;\r\n    background: ;\r\n    box-shadow: 0 0 150px grey;\r\n`;\r\n\r\nconst Background = () => (\r\n    <>\r\n        <Circle />\r\n    </>\r\n);\r\n\r\nexport default Background;\r\n","import { createGlobalStyle } from 'styled-components'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    .MuiTypography-root {\r\n        font-family: 'Quicksand', sans-serif !important;\r\n    }\r\n\r\n    .MuiTypography-h4, .MuiTypography-h5, .MuiTypography-body2 {\r\n        font-family: 'Baloo Tammudu 2', cursive !important;\r\n    }\r\n\r\n    .MuiTypography-body1 {\r\n        font-weight: 600 !important;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import styled from \"styled-components\";\r\nimport Container from \"./components/Container\";\r\nimport { AddData } from './utils/DataProvider';\r\nimport { getColor } from \"./utils/ThemeProvider\";\r\nimport Background from './components/Background';\r\nimport GlobalStyle from './components/GlobalStyle';\r\nimport { ColorType } from \"./utils/Constant\";\r\n\r\nconst AppContainer = styled.div`\r\n\tposition: relative;\r\n\tbackground: ${getColor(ColorType.background)};\r\n`;\r\n\r\nfunction App() {\r\n\tAddData();\r\n\r\n\treturn (\r\n\t\t<AppContainer className=\"App\">\r\n\t\t\t<GlobalStyle />\r\n\t\t\t<Container />\r\n\t\t</AppContainer>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}